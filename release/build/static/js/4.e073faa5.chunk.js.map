{"version":3,"sources":["components/TransitionTest.module.css","components/LoginForm.js","components/uiComponent/Button.js","components/uiComponent/AppLink.js","components/LoginWithSpotify.js","components/Slider.js","components/SignupForm.js","components/PoseTest.js","redux/selectors/sliderSelectors.js","routes/Login.js","redux/actions/sliderActions.js"],"names":["module","exports","myDiv","myDivEnter","myDivEnterDone","myDivEnterActive","myDivExit","myDivExitActive","myDivExitDone","fakeLogin","username","password","Promise","resolve","reject","setTimeout","status","message","LoginForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","data","errors","handleChange","e","name","target","value","setState","prevState","objectSpread","defineProperty","handleSubmit","values","_ref","setSubmitting","then","result","console","log","catch","err","error","finally","inherits","createClass","key","react_default","a","createElement","formik_esm","onSubmit","initialValues","_ref2","isSubmitting","_StyledForm","_css2","css","_templateObject","htmlFor","type","disabled","Component","withRouter","Button","styled","button","Button_templateObject","AppLink","AppLink_templateObject","props","activeBackgroundColor","LoginWithSpotify","uiComponent_Button","uiComponent_AppLink","href","barWidth","SliderBar","div","Slider_templateObject","handleWidth","SliderHandle","Slider_templateObject2","position","Slider","num","onChange","clicked","React","useRef","bar","currentValue","useEffect","current","step","_React$useState","useState","_React$useState2","slicedToArray","handleEnd","handleMove","mousePosition","newHandlePosition","screenX","Math","min","max","floor","offsetLeft","handleMoveEventListener","document","addEventListener","removeEventListener","ref","onMouseDown","once","strongRegex","RegExp","CustomErrorMessage","style","color","InterestItem","CSSTransition","attrs","classNames","timeout","withConfig","displayName","componentId","SignupForm","preventDefault","validationSchema","Yup","shape","required","matches","interests","setFieldValue","SignupForm_StyledForm","SignupForm_templateObject","arrayHelpers","Fragment","TransitionGroup","map","interest","index","placeholder","backgroundColor","components_Slider","newValue","onClick","remove","margin","push","width","interpolate","transform","Box","clamp","blendColor","pipe","posed","draggable","hoverable","hover","scale","init","drag","dragEnd","transition","x","y","passive","opacity","open","delayChildren","staggerChildren","close","delay","staggerDirection","i","duration","PoseTest","setIsOpen","setInterval","isOpen","height","getSliderValue","slider","Login","location","from","localStorage","setItem","JSON","stringify","_StyledDiv","Login_templateObject","components_LoginForm","components_PoseTest","components_SignupForm","components_LoginWithSpotify","connect","sliderPosition","dispatch","setSliderPosition","SET_SLIDER_VALUE","payload","setSliderValue"],"mappings":"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","file":"static/js/4.e073faa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myDiv\":\"TransitionTest_myDiv__16_qG\",\"myDivEnter\":\"TransitionTest_myDivEnter__sXmff\",\"myDivEnterDone\":\"TransitionTest_myDivEnterDone__1FXUG\",\"myDivEnterActive\":\"TransitionTest_myDivEnterActive__I-EuP\",\"myDivExit\":\"TransitionTest_myDivExit__2aZum\",\"myDivExitActive\":\"TransitionTest_myDivExitActive__3Lmmy\",\"myDivExitDone\":\"TransitionTest_myDivExitDone__2NaMU\"};","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { css } from 'styled-components/macro';\r\nimport authUtils from '../utils/authUtils';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\n\r\nlet fakeLogin = (username, password) =>\r\n  new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (username === 'Eddie' && password === '123456') {\r\n        resolve({ status: 200, message: 'Logged in succesfuly' });\r\n      } else {\r\n        reject({ status: 401, message: 'Username/Password is wrong' });\r\n      }\r\n    }, 2000);\r\n  });\r\n\r\nexport class LoginForm extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  handleChange = e => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      data: {\r\n        ...prevState.data,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (values, { setSubmitting }) => {\r\n    fakeLogin(values.username, values.password)\r\n      .then(result => {\r\n        console.log(result.message);\r\n        // authUtils.login('wefweefwef');\r\n        // this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.error(err.message);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n    // if (\r\n    //   this.state.data.username === 'Eddie' &&\r\n    //   this.state.data.password === '12345'\r\n    // ) {\r\n    //   this.setState(prevState => ({\r\n    //     data: {\r\n    //       ...prevState.data,\r\n    //       username: '',\r\n    //       password: ''\r\n    //     }\r\n    //   }));\r\n    //   authUtils.login('wefweefwef');\r\n    //   this.props.history.push('/');\r\n    // } else {\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       username: 'Username is not correct',\r\n    //       password: 'Password is not correct'\r\n    //     }\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        onSubmit={this.handleSubmit}\r\n        initialValues={{ username: 'Eddie', password: '' }}>\r\n        {({ isSubmitting }) => (\r\n          <Form\r\n            css={css`\r\n              display: flex;\r\n              flex-direction: column;\r\n              padding: 35px;\r\n            `}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n            <Field type=\"text\" name=\"username\" />\r\n            <ErrorMessage name=\"username\" />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <Field type=\"password\" name=\"password\" />\r\n            <ErrorMessage name=\"password\" />\r\n            <input disabled={isSubmitting} type=\"submit\" value=\"Login\" />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  min-width: 200px;\r\n  border: 5px black solid;\r\n  color: black;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nlet AppLink = styled.a`\r\n  color: #09070e;\r\n  &:hover {\r\n    background-color: ${props => props.activeBackgroundColor};\r\n  }\r\n  &:active,\r\n  &:hover,\r\n  &:link {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default AppLink;\r\n","import React, { Component } from 'react';\r\nimport Button from './uiComponent/Button';\r\nimport AppLink from './uiComponent/AppLink';\r\n\r\nlet yourclientid = '451764dd4587472590d910723e9e2beb';\r\nexport class LoginWithSpotify extends Component {\r\n  render() {\r\n    return (\r\n      <Button>\r\n        <AppLink\r\n          href={`https://accounts.spotify.com/authorize?client_id=${yourclientid}&response_type=token&redirect_uri=http://localhost:3000/callback/&scopes=user-top-read`}>\r\n          Login With Spotify\r\n        </AppLink>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginWithSpotify;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst barWidth = 200;\nconst SliderBar = styled.div`\n  width: ${barWidth}px;\n  height: 8px;\n  background-color: white;\n  border-radius: 4px;\n`;\n\nconst handleWidth = 16;\nconst SliderHandle = styled.div`\n  width: ${handleWidth}px;\n  height: ${handleWidth}px;\n  border-radius: ${handleWidth / 2}px;\n  background-color: white;\n  transform: ${props => `translate(${props.position}px, -25%)`};\n  transition: transform 0.7s cubic-bezier(0.08, 1.1, 0.47, 1.4);\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    background-color: #ddd;\n  }\n`;\n\nfunction Slider({ num, value, onChange }) {\n  const clicked = React.useRef(false);\n  const bar = React.useRef(null);\n  const currentValue = React.useRef(value);\n  React.useEffect(() => {\n    currentValue.current = value;\n  }, [value]);\n\n  const step = (barWidth - handleWidth) / num;\n  const [position, setPosition] = React.useState(step * value);\n  console.log('Position is', value);\n\n  const handleEnd = () => {\n    clicked.current = false;\n  };\n\n  // React.useEffect(() => {\n  //   const target = value * step;\n  //   const interval = setInterval(() => {\n  //     setPosition(position =>\n  //       target < position ? position - 2 : position + 2\n  //     );\n  //   }, 15);\n  //   return () => clearInterval(interval);\n  // }, [value]);\n\n  const handleStart = () => {\n    clicked.current = true;\n    document.addEventListener('mouseup', handleEnd, { once: true });\n  };\n\n  const getHandlePositionFromMousePosition = mousePosition => {\n    return Math.min(\n      Math.max(Math.floor((mousePosition - bar.current.offsetLeft) / step), 0),\n      num\n    );\n  };\n\n  const handleMove = e => {\n    const newHandlePosition = getHandlePositionFromMousePosition(e.screenX);\n    if (newHandlePosition !== currentValue.current) onChange(newHandlePosition);\n  };\n  React.useEffect(() => {\n    let handleMoveEventListener = e => {\n      if (clicked.current) handleMove(e);\n    };\n    document.addEventListener('mousemove', handleMoveEventListener);\n    return () =>\n      document.removeEventListener('mousemove', handleMoveEventListener);\n  }, []);\n\n  return (\n    <SliderBar ref={bar}>\n      <SliderHandle onMouseDown={handleStart} position={value * step} />\n    </SliderBar>\n  );\n}\n\nexport default Slider;\n","import React, { Component } from 'react';\r\nimport { css } from 'styled-components/macro';\r\n// import Formik, { Field, ErrorMessage,Debug, Form } from './Formik';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\nimport { Formik, Field, ErrorMessage, Form, FieldArray, replace } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Slider from './Slider';\r\n\r\nlet strongRegex = new RegExp(\r\n  '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})'\r\n);\r\n\r\nfunction CustomErrorMessage(props) {\r\n  return (\r\n    <ErrorMessage {...props}>\r\n      {error => <p style={{ color: 'red' }}>{error}</p>}\r\n    </ErrorMessage>\r\n  );\r\n}\r\n\r\nconst InterestItem = styled(CSSTransition).attrs(props => {\r\n  console.log(props);\r\n  return { classNames: 'interest-item', timeout: 1000 };\r\n})`\r\n  padding: 20px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  background-color: #9b4dca;\r\n  transition: opacity 0.4s linear, transform 0.5s linear;\r\n\r\n  &.interest-item-enter {\r\n    opacity: 0;\r\n    transform: translate(0, -40px);\r\n  }\r\n  &.interest-item-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0px);\r\n  }\r\n  &.interest-item-enter-done {\r\n    opacity: 1;\r\n    transform: translate(0, 0px);\r\n  }\r\n  &.interest-item-exit {\r\n    opacity: 1;\r\n    transform: translate(0, 0px);\r\n  }\r\n  &.interest-item-exit-active {\r\n    opacity: 0;\r\n    transform: translate(0, -40px);\r\n  }\r\n  &.interest-item-exit-done {\r\n    opacity: 0;\r\n    transform: translate(0, -40px);\r\n  }\r\n`;\r\n\r\nclass SignupForm extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  handleChange = e => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      data: {\r\n        ...prevState.data,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('Submited');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        onSubmit={values => {\r\n          console.log('Submited', values);\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          username: Yup.string()\r\n            .min(8, 'Username is too short!')\r\n            .max(16, 'Username is too long!')\r\n            .required('Username is required'),\r\n          password: Yup.string()\r\n            .required('Password is required')\r\n            .matches(strongRegex, 'Password is weak')\r\n        })}\r\n        initialValues={{\r\n          username: 'Mohammad',\r\n          interests: []\r\n        }}>\r\n        {({ values, setFieldValue, isSubmitting }) => (\r\n          <Form\r\n            css={css`\r\n              display: flex;\r\n              flex-direction: column;\r\n              padding: 35px;\r\n            `}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n            <Field type=\"text\" name=\"username\" />\r\n            <CustomErrorMessage name=\"username\" />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <Field type=\"password\" name=\"password\" />\r\n            <CustomErrorMessage name=\"password\" />\r\n            <label htmlFor=\"passwordConfirm\">Password confirm: </label>\r\n            <Field type=\"password\" name=\"passwordConfirm\" />\r\n            <CustomErrorMessage name=\"passwordConfirm\" />\r\n            <FieldArray name=\"interests\">\r\n              {arrayHelpers => {\r\n                return (\r\n                  <>\r\n                    <TransitionGroup>\r\n                      {values.interests.map((interest, index) => (\r\n                        <InterestItem key={index}>\r\n                          <div>\r\n                            <Field\r\n                              placeholder=\"Your interest name\"\r\n                              name={`interests.${index}.name`}\r\n                              style={{ backgroundColor: 'white' }}\r\n                            />\r\n                            <Slider\r\n                              num={5}\r\n                              value={interest.value}\r\n                              onChange={newValue => {\r\n                                setFieldValue(\r\n                                  `interests.${index}.value`,\r\n                                  newValue\r\n                                );\r\n                              }}\r\n                            />\r\n                            <button\r\n                              onClick={() => {\r\n                                arrayHelpers.remove(index);\r\n                              }}\r\n                              style={{ margin: '20px' }}>\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </InterestItem>\r\n                      ))}\r\n                    </TransitionGroup>\r\n                    <button\r\n                      onClick={() => {\r\n                        arrayHelpers.push({ name: '', value: 0 });\r\n                      }}\r\n                      style={{ width: '240px', margin: '5px auto 40px auto' }}\r\n                      type=\"button\">\r\n                      Add interest\r\n                    </button>\r\n                  </>\r\n                );\r\n              }}\r\n            </FieldArray>\r\n            <input type=\"submit\" disabled={isSubmitting} value=\"SignUp\" />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { Component } from 'react';\nimport posed from 'react-pose';\nimport { transform } from 'popmotion';\nconst { interpolate, clamp, blendColor, pipe } = transform;\n\nconst Box = posed.div({\n  draggable: 'x',\n  hoverable: true,\n  hover: {\n    scale: 1.1\n    // scaleY: 1.5,\n    // transformOrigin: '50% 0'\n  },\n  init: {\n    // scaleY: 1,\n    scale: 1\n    // transformOrigin: '50% 0'\n  },\n  drag: {\n    scale: 0.9\n  },\n  dragEnd: {\n    transition: {\n      type: 'spring'\n    },\n    x: 0,\n    y: 0\n  },\n  passive: {\n    // y: ['x', x => x * Math.sin(x * 0.01)]\n    opacity: ['x', interpolate([-200, 0, 200], [0, 1, 0])]\n  }\n});\n\nconst Sidebar = posed.div({\n  open: {\n    x: '0%',\n    delayChildren: 300,\n    staggerChildren: 50\n  },\n  close: {\n    delay: 300,\n    staggerChildren: 20,\n    staggerDirection: -1,\n    x: '-100%'\n  }\n});\n\nconst Item = posed.div({\n  open: {\n    opacity: 1,\n    y: 0\n  },\n  close: {\n    opacity: 0,\n    y: ({ i }) => i * 60,\n    transition: {\n      opacity: {\n        duration: 300\n      },\n      y: {\n        duration: 400\n      }\n    }\n  }\n});\n\nfunction PoseTest() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  React.useEffect(() => {\n    setInterval(() => setIsOpen(isOpen => !isOpen), 2000);\n  }, []);\n  return (\n    // <Sidebar\n    //   pose={isOpen ? 'open' : 'close'}\n    //   style={{\n    //     position: 'absolute',\n    //     left: 0,\n    //     width: '200px',\n    //     height: '500px',\n    //     backgroundColor: 'aqua'\n    //   }}>\n    //   <Item\n    //     i={1}\n    //     style={{\n    //       width: '100%',\n    //       height: '40px',\n    //       margin: '20px',\n    //       backgroundColor: 'red'\n    //     }}\n    //   />\n    //   <Item\n    //     i={2}\n    //     style={{\n    //       width: '100%',\n    //       height: '40px',\n    //       margin: '20px',\n    //       backgroundColor: 'red'\n    //     }}\n    //   />\n    //   <Item\n    //     i={3}\n    //     style={{\n    //       width: '100%',\n    //       height: '40px',\n    //       margin: '20px',\n    //       backgroundColor: 'red'\n    //     }}\n    //   />\n    //   <Item\n    //     i={4}\n    //     style={{\n    //       width: '100%',\n    //       height: '40px',\n    //       margin: '20px',\n    //       backgroundColor: 'red'\n    //     }}\n    //   />\n    // </Sidebar>\n    <Box style={{ width: '100px', height: '100px', backgroundColor: 'red' }} />\n  );\n}\n\nexport default PoseTest;\n","export const getSliderValue = state => state.slider;\n","import React, { Component } from 'react';\r\nimport { css } from 'styled-components/macro';\r\nimport LoginForm from 'components/LoginForm';\r\nimport LoginWithSpotify from 'components/LoginWithSpotify';\r\nimport SignupForm from 'components/SignupForm';\r\nimport Slider from '../components/Slider';\r\nimport PoseTest from '../components/PoseTest';\r\nimport { connect } from 'react-redux';\r\nimport { getSliderValue } from '../redux/selectors/sliderSelectors';\r\nimport { setSliderValue } from '../redux/actions/sliderActions';\r\nimport TransitionTest from '../components/TransitionTest';\r\n\r\nexport class Login extends Component {\r\n  componentDidMount() {\r\n    if (\r\n      this.props.location &&\r\n      this.props.location.state &&\r\n      this.props.location.state.from\r\n    ) {\r\n      localStorage.setItem(\r\n        'referredRedirectPath',\r\n        JSON.stringify(this.props.location.state.from)\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        css={css`\r\n          width: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        `}>\r\n        <LoginForm />\r\n        {/* <Slider\r\n          value={this.props.sliderPosition}\r\n          onChange={this.props.setSliderPosition}\r\n        /> */}\r\n        {/* <TransitionTest /> */}\r\n        <PoseTest />\r\n        <SignupForm />\r\n        <LoginWithSpotify />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ sliderPosition: getSliderValue(state) }),\r\n  dispatch => ({\r\n    setSliderPosition: newValue => dispatch(setSliderValue(newValue))\r\n  })\r\n)(Login);\r\n","import { SET_SLIDER_VALUE } from '../actionTypes';\n\nexport const setSliderValue = newValue => ({\n  type: SET_SLIDER_VALUE,\n  payload: {\n    value: newValue\n  }\n});\n"],"sourceRoot":""}